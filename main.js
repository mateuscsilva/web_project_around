!function(){"use strict";var t,e,n,r,o={240:function(t,e,n){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}n.d(e,{Z:function(){return i}});var i=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers}var e,n;return e=t,(n=[{key:"getInitialCards",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(e){return t.checkReturn(e)})).catch((function(t){return console.log("".concat(t))}))}},{key:"getUser",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(e){return t.checkReturn(e)})).catch((function(t){return console.log("".concat(t))}))}},{key:"updateUserInfo",value:function(t){var e=document.querySelector(".popup__edit-button");e.value="Salvando...",fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.name,about:t.about})}).then((function(t){t.ok&&(e.value="Salvar")})).catch((function(t){return console.log("".concat(t))}))}},{key:"likeCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:this._headers}).then((function(t){return e.checkReturn(t)})).catch((function(t){return console.log("".concat(t))}))}},{key:"dislikeCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:this._headers}).then((function(t){return e.checkReturn(t)})).catch((function(t){return console.log("".concat(t))}))}},{key:"addNewCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.name,link:t.link})}).then((function(t){return e.checkReturn(t)})).catch((function(t){return console.log("".concat(t))}))}},{key:"updateAvatarPicture",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t.link})}).then((function(t){return e.checkReturn(t)})).catch((function(t){return console.log("".concat(t))}))}},{key:"deletePicture",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then((function(t){return e.checkReturn(t)})).catch((function(t){return console.log("".concat(t))}))}},{key:"checkReturn",value:function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}()},87:function(t,e,n){n.d(e,{Z:function(){return p}});var r=n(1);function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}function c(){return c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=u(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},c.apply(this,arguments)}function a(t,e){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},a(t,e)}function u(t){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},u(t)}var l=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&a(t,e)}(f,t);var e,n,r,l,s=(r=f,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=u(r);if(l){var n=u(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===o(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function f(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,f),s.call(this,t)}return e=f,(n=[{key:"open",value:function(t){var e=this;c(u(f.prototype),"setEventListeners",this).call(this),setTimeout((function(){var n=document.querySelector(".popup__display-image");document.querySelector(".popup__text").textContent=t.target.alt,n.src=t.target.src,n.alt=t.target.alt,c(u(f.prototype),"open",e).call(e)}),250)}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),f}(n(4).Z);function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==s(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}var p=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._likes=e.likes,this._id=e._id,this._ownerId=e.owner._id,this._templateName=n,this._api=r}var e,n;return e=t,(n=[{key:"_openPicture",value:function(t){new l(".popup-image").open(t)}},{key:"_clickLikeButton",value:function(t){t.target.classList.toggle("cards__like-button-clicked"),t.target.classList.contains("cards__like-button-clicked")?this._api.likeCard(this._id).then((function(e){t.target.nextElementSibling.textContent=e.likes.length})):this._api.dislikeCard(this._id).then((function(e){t.target.nextElementSibling.textContent=e.likes.length}))}},{key:"_clickDeleteButton",value:function(t){var e=this,n=this,o=new r.Z({formSelector:".popup-delete",handleFormSubmit:function(r){console.log(e),n._api.deletePicture(e._id).then((function(e){t.target.closest(".cards__item").remove()}))}});o.setEventListeners(),o.open()}},{key:"generateCard",value:function(t){var e=document.querySelector("#cards__template").content.querySelector(this._templateName).cloneNode(!0);return e.querySelector(".cards__picture").src=this._link,e.querySelector(".cards__picture").alt=this._name,e.querySelector(".cards__text").textContent=this._name,e.querySelector(".cards__like-count").textContent=this._likes.length,e.querySelector(".cards__picture-button").addEventListener("click",this._openPicture),e.querySelector(".cards__like-button").addEventListener("click",this._clickLikeButton.bind(this)),t==this._ownerId?e.querySelector(".cards__delete-button").addEventListener("click",this._clickDeleteButton.bind(this)):e.querySelector(".cards__delete-button").classList.add("cards__delete-button_disabled"),e}}])&&f(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}()},383:function(t,e){function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,c(r.key),r)}}function o(t,e,n){return e&&r(t.prototype,e),n&&r(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function i(t,e,n){return(e=c(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t){var e=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===n(e)?e:String(e)}var a=o((function t(e,n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),i(this,"translationsInPT",{text:{tooShort:"Mínimo de 2 caracteres ou mais",valueMissing:"Preencha este campo",typeMismatch:"Insira um texto"},url:{tooShort:"Por favor, insira um endereço web",valueMissing:"Por favor, insira um endereço web",typeMismatch:"Por favor, insira um endereço web"}}),i(this,"_showInputError",(function(t,e,n){var o=t.querySelector(".".concat(e.id,"-error"));e.classList.add(r.data.inputErrorClass),o.textContent=n,o.classList.add(r.data.inputErrorClassActive)})),i(this,"_hideInputError",(function(t,e){var n=t.querySelector(".".concat(e.id,"-error"));e.classList.remove(r.data.inputErrorClass),n.classList.remove(r.data.inputErrorClassActive),n.textContent=""})),i(this,"_checkInputValidity",(function(t,e){if(e.validity.valid)r._hideInputError(t,e);else{var n=e.validationMessage;e.validity.tooShort?n=r.translationsInPT[e.type].tooShort:e.validity.valueMissing?n=r.translationsInPT[e.type].valueMissing:e.validity.typeMismatch&&(n=r.translationsInPT[e.type].typeMismatch),r._showInputError(t,e,n)}})),i(this,"_hasInvalidInput",(function(t){return t.some((function(t){return!t.validity.valid}))})),i(this,"_toggleButtonState",(function(t,e){r._hasInvalidInput(t)?(e.classList.add(r.data.buttonInactiveClass),e.setAttribute("disabled","")):(e.classList.remove(r.data.buttonInactiveClass),e.removeAttribute("disabled"))})),i(this,"_setEventListeners",(function(t){var e=Array.from(t.querySelectorAll(r.data.inputSelector)),n=t.querySelector(r.data.submitButtonSelector);r._toggleButtonState(e,n);var o=r;e.forEach((function(r){r.addEventListener("input",(function(){o._checkInputValidity(t,r),o._toggleButtonState(e,n)}))}))})),i(this,"enableValidation",(function(){Array.from(document.querySelectorAll(r.formElement)).forEach((function(t){t.addEventListener("submit",(function(t){t.preventDefault()})),r._setEventListeners(t)}))})),this.data=e,this.formElement=n}));e.Z=a},4:function(t,e,n){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}n.d(e,{Z:function(){return i}});var i=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=e,this._container=document.querySelector(e),this._page=document.querySelector(".page"),this._closeButton=document.querySelector(e).children[0]}var e,n;return e=t,(n=[{key:"open",value:function(){var t=this;setTimeout((function(){t._page.classList.add("page__semitransparent"),t._container.classList.add("popup__opened")}),50)}},{key:"close",value:function(){this._page.classList.remove("page__semitransparent"),this._container.classList.remove("popup__opened")}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"_closeAfterButtonClick",value:function(t){t.target.closest(this._selector)&&this.close()}},{key:"_closeAfterClickOutsidePopup",value:function(t){!t.target.closest(this._selector)&&this._container.classList.contains("popup__opened")&&this.close()}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this._closeAfterButtonClick.bind(this)),this._closeButton.removeEventListener("click",this._closeAfterButtonClick.bind(this)),document.addEventListener("click",this._closeAfterClickOutsidePopup.bind(this)),document.removeEventListener("click",this._closeAfterClickOutsidePopup.bind(this)),document.addEventListener("keydown",this._handleEscClose.bind(this)),document.removeEventListener("keydown",this._handleEscClose.bind(this))}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}()},1:function(t,e,n){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=a(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},i.apply(this,arguments)}function c(t,e){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},c(t,e)}function a(t){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},a(t)}n.d(e,{Z:function(){return u}});var u=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&c(t,e)}(f,t);var e,n,u,l,s=(u=f,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=a(u);if(l){var n=a(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===r(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function f(t){var e,n=t.formSelector,r=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,f),(e=s.call(this,n))._handleFormSubmit=r,e._inputList=e._container.querySelectorAll(".form__input"),e}return e=f,(n=[{key:"_getInputValues",value:function(){var t=this;return this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"_setInputValues",value:function(t){this._inputList.forEach((function(e){return e.placeholder=t[e.name],e}))}},{key:"_reset",value:function(){this._inputList.forEach((function(t){t.value=""}))}},{key:"setEventListeners",value:function(){var t=this;i(a(f.prototype),"setEventListeners",this).call(this),this._container.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues()),t.close()}))}},{key:"close",value:function(){this._reset(),i(a(f.prototype),"close",this).call(this)}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),f}(n(4).Z)},411:function(t,e,n){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}n.d(e,{Z:function(){return i}});var i=function(){function t(e,n){var r=e.item,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._item=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderer",value:function(){var t=this;this._item.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.insertBefore(t,this._container.firstChild)}},{key:"addItemInitializePage",value:function(t){this._container.append(t)}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}()},840:function(t,e,n){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}n.d(e,{Z:function(){return i}});var i=function(){function t(e,n){var r=e.nameSelector,o=e.aboutSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameSelector=document.querySelector(r),this._aboutSelector=document.querySelector(o),this._id=n}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,about:this._aboutSelector.textContent}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about;this._nameSelector.textContent=e,this._aboutSelector.textContent=n}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}()},579:function(t,e,n){n.a(t,(async function(t,e){try{var r=n(87),o=n(383),i=n(411),c=n(840),a=n(1),u=n(240),l=document.querySelector(".profile__edit-button"),s=document.querySelector(".profile__add-button"),f=document.querySelector(".profile__avatar-button"),p=document.querySelector(".profile__image"),y=document.querySelector(".profile__name"),d=document.querySelector(".profile__work"),h=new u.Z({baseUrl:"https://around.nomoreparties.co/v1/web_ptbr_04",headers:{authorization:"fbd44759-5f10-4694-9bff-f7e35b04f97b","Content-Type":"application/json"}}),v=await h.getUser();p.src=v.avatar,y.textContent=v.name,d.textContent=v.about;var b=new c.Z({nameSelector:".profile__name",aboutSelector:".profile__work"},v._id),m=await h.getInitialCards(),_=new i.Z({item:m,renderer:function(t){var e=new r.Z(t,".cards__item",h).generateCard(b._id);_.addItemInitializePage(e)}},".cards");_.renderer(),k={inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"form__input_type_error",buttonInactiveClass:"button__inactive",errorClass:"form__error_visible",inputErrorClassActive:"form__input-error_active"},new o.Z(k,".popup__form-edit").enableValidation(),new o.Z(k,".popup__form-add").enableValidation(),new o.Z(k,".popup__form-avatar").enableValidation();var S=new a.Z({formSelector:".popup-add",handleFormSubmit:function(t){h.addNewCard(t).then((function(t){var e=new r.Z(t,".cards__item",h).generateCard(b._id);_.addItem(e)}))}});S.setEventListeners();var g=new a.Z({formSelector:".popup-edit",handleFormSubmit:function(t){h.updateUserInfo(t),b.setUserInfo({name:t.name,about:t.about})}});g.setEventListeners();var w=new a.Z({formSelector:".popup-avatar",handleFormSubmit:function(t){h.updateAvatarPicture(t).then((function(t){document.querySelector(".profile__image").src=t.avatar}))}});function E(){g._setInputValues(b.getUserInfo()),g.open()}function P(){S.open()}function j(){w.open()}w.setEventListeners(),l.addEventListener("click",E),s.addEventListener("click",P),f.addEventListener("click",j),e()}catch(O){e(O)}var k}),1)}},i={};function c(t){var e=i[t];if(void 0!==e)return e.exports;var n=i[t]={exports:{}};return o[t](n,n.exports,c),n.exports}t="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",e="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=function(t){t&&t.d<1&&(t.d=1,t.forEach((function(t){t.r--})),t.forEach((function(t){t.r--?t.r++:t()})))},c.a=function(o,i,c){var a;c&&((a=[]).d=-1);var u,l,s,f=new Set,p=o.exports,y=new Promise((function(t,e){s=e,l=t}));y[e]=p,y[t]=function(t){a&&t(a),f.forEach(t),y.catch((function(){}))},o.exports=y,i((function(o){var i;u=function(o){return o.map((function(o){if(null!==o&&"object"==typeof o){if(o[t])return o;if(o.then){var i=[];i.d=0,o.then((function(t){c[e]=t,r(i)}),(function(t){c[n]=t,r(i)}));var c={};return c[t]=function(t){t(i)},c}}var a={};return a[t]=function(){},a[e]=o,a}))}(o);var c=function(){return u.map((function(t){if(t[n])throw t[n];return t[e]}))},l=new Promise((function(e){(i=function(){e(c)}).r=0;var n=function(t){t!==a&&!f.has(t)&&(f.add(t),t&&!t.d&&(i.r++,t.push(i)))};u.map((function(e){e[t](n)}))}));return i.r?l:c()}),(function(t){t?s(y[n]=t):l(p),r(a)})),a&&a.d<0&&(a.d=0)},c.d=function(t,e){for(var n in e)c.o(e,n)&&!c.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},c.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},c(579)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU1BLEVBQUVwQixJQUFNQyxFQUFHQyxJQUFLa0IsRUFBRUUsS0FBS3JCLElBQU8sRUFDdkhJLEVBQVlRLEtBQUksU0FBU0MsR0FBT0EsRUFBSTdPLEdBQWVrUCxFQUFVLEdBQzlELElBQ0EsT0FBT2xCLEVBQUdDLEVBQUlPLEVBQVVTLEdBQ3pCLElBQUcsU0FBUzVOLEdBQVFBLEVBQU0wQixFQUFPeUwsRUFBUXRPLEdBQWdCbUIsR0FBT2dOLEVBQWFYLEdBQVd2TixFQUFhMk4sRUFBUSxJQUM3R0EsR0FBU0EsRUFBTUMsRUFBSSxJQUFNRCxFQUFNQyxFQUFJLEVBQ3BDLEVXL0RBVCxFQUFvQlMsRUFBSSxTQUFTTCxFQUFTNEIsR0FDekMsSUFBSSxJQUFJMU8sS0FBTzBPLEVBQ1hoQyxFQUFvQmlDLEVBQUVELEVBQVkxTyxLQUFTME0sRUFBb0JpQyxFQUFFN0IsRUFBUzlNLElBQzVFNE8sT0FBT0MsZUFBZS9CLEVBQVM5TSxFQUFLLENBQUU4TyxZQUFZLEVBQU1DLElBQUtMLEVBQVcxTyxJQUczRSxFQ1BBME0sRUFBb0JpQyxFQUFJLFNBQVNULEVBQUtjLEdBQVEsT0FBT0osT0FBTzlMLFVBQVVtTSxlQUFldk0sS0FBS3dMLEVBQUtjLEVBQU8sRUNHNUV0QyxFQUFvQixJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyL3dlYnBhY2svcnVudGltZS9hc3luYyBtb2R1bGUiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici93ZWJwYWNrL3N0YXJ0dXAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHdlYnBhY2tRdWV1ZXMgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgPyBTeW1ib2woXCJ3ZWJwYWNrIHF1ZXVlc1wiKSA6IFwiX193ZWJwYWNrX3F1ZXVlc19fXCI7XG52YXIgd2VicGFja0V4cG9ydHMgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgPyBTeW1ib2woXCJ3ZWJwYWNrIGV4cG9ydHNcIikgOiBcIl9fd2VicGFja19leHBvcnRzX19cIjtcbnZhciB3ZWJwYWNrRXJyb3IgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgPyBTeW1ib2woXCJ3ZWJwYWNrIGVycm9yXCIpIDogXCJfX3dlYnBhY2tfZXJyb3JfX1wiO1xudmFyIHJlc29sdmVRdWV1ZSA9IGZ1bmN0aW9uKHF1ZXVlKSB7XG5cdGlmKHF1ZXVlICYmIHF1ZXVlLmQgPCAxKSB7XG5cdFx0cXVldWUuZCA9IDE7XG5cdFx0cXVldWUuZm9yRWFjaChmdW5jdGlvbihmbikgeyBmbi5yLS07IH0pO1xuXHRcdHF1ZXVlLmZvckVhY2goZnVuY3Rpb24oZm4pIHsgZm4uci0tID8gZm4ucisrIDogZm4oKTsgfSk7XG5cdH1cbn1cbnZhciB3cmFwRGVwcyA9IGZ1bmN0aW9uKGRlcHMpIHsgcmV0dXJuIGRlcHMubWFwKGZ1bmN0aW9uKGRlcCkge1xuXHRpZihkZXAgIT09IG51bGwgJiYgdHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIikge1xuXHRcdGlmKGRlcFt3ZWJwYWNrUXVldWVzXSkgcmV0dXJuIGRlcDtcblx0XHRpZihkZXAudGhlbikge1xuXHRcdFx0dmFyIHF1ZXVlID0gW107XG5cdFx0XHRxdWV1ZS5kID0gMDtcblx0XHRcdGRlcC50aGVuKGZ1bmN0aW9uKHIpIHtcblx0XHRcdFx0b2JqW3dlYnBhY2tFeHBvcnRzXSA9IHI7XG5cdFx0XHRcdHJlc29sdmVRdWV1ZShxdWV1ZSk7XG5cdFx0XHR9LCBmdW5jdGlvbihlKSB7XG5cdFx0XHRcdG9ialt3ZWJwYWNrRXJyb3JdID0gZTtcblx0XHRcdFx0cmVzb2x2ZVF1ZXVlKHF1ZXVlKTtcblx0XHRcdH0pO1xuXHRcdFx0dmFyIG9iaiA9IHt9O1xuXHRcdFx0b2JqW3dlYnBhY2tRdWV1ZXNdID0gZnVuY3Rpb24oZm4pIHsgZm4ocXVldWUpOyB9O1xuXHRcdFx0cmV0dXJuIG9iajtcblx0XHR9XG5cdH1cblx0dmFyIHJldCA9IHt9O1xuXHRyZXRbd2VicGFja1F1ZXVlc10gPSBmdW5jdGlvbigpIHt9O1xuXHRyZXRbd2VicGFja0V4cG9ydHNdID0gZGVwO1xuXHRyZXR1cm4gcmV0O1xufSk7IH07XG5fX3dlYnBhY2tfcmVxdWlyZV9fLmEgPSBmdW5jdGlvbihtb2R1bGUsIGJvZHksIGhhc0F3YWl0KSB7XG5cdHZhciBxdWV1ZTtcblx0aGFzQXdhaXQgJiYgKChxdWV1ZSA9IFtdKS5kID0gLTEpO1xuXHR2YXIgZGVwUXVldWVzID0gbmV3IFNldCgpO1xuXHR2YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzO1xuXHR2YXIgY3VycmVudERlcHM7XG5cdHZhciBvdXRlclJlc29sdmU7XG5cdHZhciByZWplY3Q7XG5cdHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqKSB7XG5cdFx0cmVqZWN0ID0gcmVqO1xuXHRcdG91dGVyUmVzb2x2ZSA9IHJlc29sdmU7XG5cdH0pO1xuXHRwcm9taXNlW3dlYnBhY2tFeHBvcnRzXSA9IGV4cG9ydHM7XG5cdHByb21pc2Vbd2VicGFja1F1ZXVlc10gPSBmdW5jdGlvbihmbikgeyBxdWV1ZSAmJiBmbihxdWV1ZSksIGRlcFF1ZXVlcy5mb3JFYWNoKGZuKSwgcHJvbWlzZVtcImNhdGNoXCJdKGZ1bmN0aW9uKCkge30pOyB9O1xuXHRtb2R1bGUuZXhwb3J0cyA9IHByb21pc2U7XG5cdGJvZHkoZnVuY3Rpb24oZGVwcykge1xuXHRcdGN1cnJlbnREZXBzID0gd3JhcERlcHMoZGVwcyk7XG5cdFx0dmFyIGZuO1xuXHRcdHZhciBnZXRSZXN1bHQgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGN1cnJlbnREZXBzLm1hcChmdW5jdGlvbihkKSB7XG5cdFx0XHRpZihkW3dlYnBhY2tFcnJvcl0pIHRocm93IGRbd2VicGFja0Vycm9yXTtcblx0XHRcdHJldHVybiBkW3dlYnBhY2tFeHBvcnRzXTtcblx0XHR9KTsgfVxuXHRcdHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSkge1xuXHRcdFx0Zm4gPSBmdW5jdGlvbigpIHsgcmVzb2x2ZShnZXRSZXN1bHQpOyB9O1xuXHRcdFx0Zm4uciA9IDA7XG5cdFx0XHR2YXIgZm5RdWV1ZSA9IGZ1bmN0aW9uKHEpIHsgcSAhPT0gcXVldWUgJiYgIWRlcFF1ZXVlcy5oYXMocSkgJiYgKGRlcFF1ZXVlcy5hZGQocSksIHEgJiYgIXEuZCAmJiAoZm4ucisrLCBxLnB1c2goZm4pKSk7IH07XG5cdFx0XHRjdXJyZW50RGVwcy5tYXAoZnVuY3Rpb24oZGVwKSB7IGRlcFt3ZWJwYWNrUXVldWVzXShmblF1ZXVlKTsgfSk7XG5cdFx0fSk7XG5cdFx0cmV0dXJuIGZuLnIgPyBwcm9taXNlIDogZ2V0UmVzdWx0KCk7XG5cdH0sIGZ1bmN0aW9uKGVycikgeyAoZXJyID8gcmVqZWN0KHByb21pc2Vbd2VicGFja0Vycm9yXSA9IGVycikgOiBvdXRlclJlc29sdmUoZXhwb3J0cykpLCByZXNvbHZlUXVldWUocXVldWUpOyB9KTtcblx0cXVldWUgJiYgcXVldWUuZCA8IDAgJiYgKHF1ZXVlLmQgPSAwKTtcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gb3B0aW9ucy5iYXNlVXJsO1xyXG4gICAgdGhpcy5faGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcclxuICB9XHJcblxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xyXG4gICAgICB9KVxyXG4gICAgICAudGhlbihyZXMgPT4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNoZWNrUmV0dXJuKHJlcyk7XHJcbiAgICAgIH0pLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGAke2Vycn1gKSk7IFxyXG4gIH1cclxuXHJcbiAgZ2V0VXNlcigpe1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICAgIH0pXHJcbiAgICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hlY2tSZXR1cm4ocmVzKTtcclxuICAgICAgfSkuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coYCR7ZXJyfWApKTsgXHJcbiAgfVxyXG5cclxuICB1cGRhdGVVc2VySW5mbyhkYXRhKXtcclxuICAgIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2VkaXQtYnV0dG9uXCIpO1xyXG4gICAgc3VibWl0QnV0dG9uLnZhbHVlID0gXCJTYWx2YW5kby4uLlwiO1xyXG4gICAgZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICAgIGFib3V0OiBkYXRhLmFib3V0XHJcbiAgICAgIH0pXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgaWYocmVzLm9rKXtcclxuICAgICAgICBzdWJtaXRCdXR0b24udmFsdWUgPSBcIlNhbHZhclwiO1xyXG4gICAgICB9XHJcbiAgICB9KS5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhgJHtlcnJ9YCkpOyBcclxuICAgIFxyXG4gIH1cclxuXHJcbiAgbGlrZUNhcmQoY2FyZHNJZCl7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkc0lkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICB9KS50aGVuKHJlcyA9PiB7XHJcbiAgICAgIHJldHVybiB0aGlzLmNoZWNrUmV0dXJuKHJlcyk7XHJcbiAgICB9KS5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhgJHtlcnJ9YCkpO1xyXG4gIH1cclxuXHJcbiAgZGlzbGlrZUNhcmQoY2FyZHNJZCl7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkc0lkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICB9KS50aGVuKHJlcyA9PiB7XHJcbiAgICAgIHJldHVybiB0aGlzLmNoZWNrUmV0dXJuKHJlcyk7XHJcbiAgICB9KS5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhgJHtlcnJ9YCkpO1xyXG4gIH1cclxuXHJcbiAgYWRkTmV3Q2FyZChkYXRhKXtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcclxuICAgICAgICBsaW5rOiBkYXRhLmxpbmtcclxuICAgICAgfSlcclxuICAgIH0pLnRoZW4ocmVzID0+IHtcclxuICAgICAgcmV0dXJuIHRoaXMuY2hlY2tSZXR1cm4ocmVzKTtcclxuICAgIH0pLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGAke2Vycn1gKSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVBdmF0YXJQaWN0dXJlKGF2YXRhcil7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogYXZhdGFyLmxpbmtcclxuICAgICAgfSlcclxuICAgIH0pLnRoZW4ocmVzID0+IHtcclxuICAgICAgcmV0dXJuIHRoaXMuY2hlY2tSZXR1cm4ocmVzKTtcclxuICAgIH0pLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGAke2Vycn1gKSk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVQaWN0dXJlKGNhcmRJZCl7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgIH0pLnRoZW4ocmVzID0+IHtcclxuICAgICAgcmV0dXJuIHRoaXMuY2hlY2tSZXR1cm4ocmVzKTtcclxuICAgIH0pLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGAke2Vycn1gKSk7XHJcbiAgfVxyXG5cclxuICBjaGVja1JldHVybihyZXMpe1xyXG4gICAgaWYgKHJlcy5vaykge1xyXG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgIH1cclxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXB7XHJcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3Ipe1xyXG4gICAgc3VwZXIoc2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgb3BlbihldnQpe1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4geyBcclxuICAgICAgY29uc3QgZGlzcGxheUltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19kaXNwbGF5LWltYWdlJyk7XHJcbiAgICAgIGNvbnN0IHBvcHVwVGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fdGV4dCcpO1xyXG4gICAgICBwb3B1cFRleHQudGV4dENvbnRlbnQgPSBldnQudGFyZ2V0LmFsdDtcclxuICAgICAgZGlzcGxheUltYWdlLnNyYyA9IGV2dC50YXJnZXQuc3JjO1xyXG4gICAgICBkaXNwbGF5SW1hZ2UuYWx0ID0gZXZ0LnRhcmdldC5hbHQ7XHJcbiAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgICAgLy90aGlzLl9wYWdlLmNsYXNzTGlzdC5hZGQoJ3BhZ2VfX3NlbWl0cmFuc3BhcmVudCcpO1xyXG4gICAgICAvL3RoaXMuX2NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdwb3B1cF9fb3BlbmVkJyk7XHJcbiAgICB9LCAyNTApO1xyXG4gICAgXHJcbiAgfVxyXG59IiwiaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4vUG9wdXBXaXRoRm9ybVwiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4vUG9wdXBXaXRoSW1hZ2VcIjtcclxuXHJcbmNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKGRhdGEsIHRlbXBsYXRlTmFtZSwgYXBpKXtcclxuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xyXG4gICAgdGhpcy5faWQgPSBkYXRhLl9pZDtcclxuICAgIHRoaXMuX293bmVySWQgPSBkYXRhLm93bmVyLl9pZDtcclxuICAgIHRoaXMuX3RlbXBsYXRlTmFtZSA9IHRlbXBsYXRlTmFtZTtcclxuICAgIHRoaXMuX2FwaSA9IGFwaTtcclxuICB9XHJcblxyXG4gIF9vcGVuUGljdHVyZShldnQpe1xyXG4gICAgY29uc3QgcG9wdXBJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnLnBvcHVwLWltYWdlJyk7XHJcbiAgICBwb3B1cEltYWdlLm9wZW4oZXZ0KTtcclxuICAgIC8qXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgY29uc3QgcGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlJyk7XHJcbiAgICAgIGNvbnN0IHBvcHVwSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXAtaW1hZ2UnKTtcclxuICAgICAgY29uc3QgZGlzcGxheUltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19kaXNwbGF5LWltYWdlJyk7XHJcbiAgICAgIGNvbnN0IHBvcHVwVGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fdGV4dCcpO1xyXG4gICAgICBwb3B1cFRleHQudGV4dENvbnRlbnQgPSBldnQudGFyZ2V0LmFsdDtcclxuICAgICAgZGlzcGxheUltYWdlLnNyYyA9IGV2dC50YXJnZXQuc3JjO1xyXG4gICAgICBkaXNwbGF5SW1hZ2UuYWx0ID0gZXZ0LnRhcmdldC5hbHQ7XHJcbiAgICAgIHBhZ2UuY2xhc3NMaXN0LmFkZCgncGFnZV9fc2VtaXRyYW5zcGFyZW50Jyk7XHJcbiAgICAgIHBvcHVwSW1hZ2UuY2xhc3NMaXN0LmFkZCgncG9wdXBfX29wZW5lZCcpO1xyXG4gICAgfSwgMjUwKTtcclxuICAgICovXHJcbiAgfVxyXG5cclxuICBfY2xpY2tMaWtlQnV0dG9uKGV2dCl7XHJcbiAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkc19fbGlrZS1idXR0b24tY2xpY2tlZFwiKTtcclxuICAgIGlmKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2FyZHNfX2xpa2UtYnV0dG9uLWNsaWNrZWRcIikpe1xyXG4gICAgICBjb25zdCBjYXJkID0gdGhpcy5fYXBpLmxpa2VDYXJkKHRoaXMuX2lkKTtcclxuICAgICAgY2FyZC50aGVuKChyZXMpID0+eyBcclxuICAgICAgICBldnQudGFyZ2V0Lm5leHRFbGVtZW50U2libGluZy50ZXh0Q29udGVudCA9IHJlcy5saWtlcy5sZW5ndGg7XHJcbiAgICAgIH0pO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgIGNvbnN0IGNhcmQgPSB0aGlzLl9hcGkuZGlzbGlrZUNhcmQodGhpcy5faWQpO1xyXG4gICAgICBjYXJkLnRoZW4oKHJlcykgPT57IFxyXG4gICAgICAgIGV2dC50YXJnZXQubmV4dEVsZW1lbnRTaWJsaW5nLnRleHRDb250ZW50ID0gcmVzLmxpa2VzLmxlbmd0aDtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIF9jbGlja0RlbGV0ZUJ1dHRvbihldnQpe1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICBjb25zdCBkZWxldGVGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gICAgICBmb3JtU2VsZWN0b3I6ICcucG9wdXAtZGVsZXRlJyxcclxuICAgICAgaGFuZGxlRm9ybVN1Ym1pdDogKGZvcm1EYXRhKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcyk7XHJcbiAgICAgICAgc2VsZi5fYXBpLmRlbGV0ZVBpY3R1cmUodGhpcy5faWQpXHJcbiAgICAgICAgLnRoZW4oKHJlcyk9PntcclxuICAgICAgICAgIGV2dC50YXJnZXQuY2xvc2VzdCgnLmNhcmRzX19pdGVtJykucmVtb3ZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgZGVsZXRlRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgZGVsZXRlRm9ybS5vcGVuKCk7XHJcbiAgfVxyXG5cclxuICBnZW5lcmF0ZUNhcmQodXNlcklkKXtcclxuICAgIGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXJkc19fdGVtcGxhdGUnKS5jb250ZW50O1xyXG4gICAgY29uc3QgbmV3Q2FyZCA9IGNhcmRUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlTmFtZSkuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgbmV3Q2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZHNfX3BpY3R1cmUnKS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgbmV3Q2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZHNfX3BpY3R1cmUnKS5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gICAgbmV3Q2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZHNfX3RleHQnKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICBuZXdDYXJkLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkc19fbGlrZS1jb3VudCcpLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xyXG4gICAgbmV3Q2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZHNfX3BpY3R1cmUtYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX29wZW5QaWN0dXJlKTtcclxuICAgIG5ld0NhcmQucXVlcnlTZWxlY3RvcignLmNhcmRzX19saWtlLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9jbGlja0xpa2VCdXR0b24uYmluZCh0aGlzKSk7XHJcbiAgICBpZih1c2VySWQgPT0gdGhpcy5fb3duZXJJZCl7XHJcbiAgICAgIG5ld0NhcmQucXVlcnlTZWxlY3RvcignLmNhcmRzX19kZWxldGUtYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2NsaWNrRGVsZXRlQnV0dG9uLmJpbmQodGhpcykpO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgIG5ld0NhcmQucXVlcnlTZWxlY3RvcignLmNhcmRzX19kZWxldGUtYnV0dG9uJykuY2xhc3NMaXN0LmFkZCgnY2FyZHNfX2RlbGV0ZS1idXR0b25fZGlzYWJsZWQnKTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXdDYXJkO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZDsiLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3RvcihkYXRhLCBmb3JtRWxlbWVudCl7XHJcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgdGhpcy5mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gIH1cclxuICBcclxuICB0cmFuc2xhdGlvbnNJblBUID0ge1xyXG4gICAgdGV4dDoge1xyXG4gICAgICB0b29TaG9ydDogXCJNw61uaW1vIGRlIDIgY2FyYWN0ZXJlcyBvdSBtYWlzXCIsXHJcbiAgICAgIHZhbHVlTWlzc2luZzogXCJQcmVlbmNoYSBlc3RlIGNhbXBvXCIsXHJcbiAgICAgIHR5cGVNaXNtYXRjaDogXCJJbnNpcmEgdW0gdGV4dG9cIlxyXG4gICAgfSxcclxuICAgIHVybDoge1xyXG4gICAgICB0b29TaG9ydDogXCJQb3IgZmF2b3IsIGluc2lyYSB1bSBlbmRlcmXDp28gd2ViXCIsXHJcbiAgICAgIHZhbHVlTWlzc2luZzogXCJQb3IgZmF2b3IsIGluc2lyYSB1bSBlbmRlcmXDp28gd2ViXCIsXHJcbiAgICAgIHR5cGVNaXNtYXRjaDogXCJQb3IgZmF2b3IsIGluc2lyYSB1bSBlbmRlcmXDp28gd2ViXCJcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zaG93SW5wdXRFcnJvciA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpID0+IHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuZGF0YS5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5kYXRhLmlucHV0RXJyb3JDbGFzc0FjdGl2ZSk7XHJcbiAgfTtcclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuZGF0YS5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5kYXRhLmlucHV0RXJyb3JDbGFzc0FjdGl2ZSk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gIH07XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkgPSAoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgbGV0IHZhbGlkYXRpb25NZXNzYWdlID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgICBpZihpbnB1dEVsZW1lbnQudmFsaWRpdHkudG9vU2hvcnQpe1xyXG4gICAgICAgIHZhbGlkYXRpb25NZXNzYWdlID0gdGhpcy50cmFuc2xhdGlvbnNJblBUW2lucHV0RWxlbWVudC50eXBlXVsndG9vU2hvcnQnXVxyXG4gICAgICB9ZWxzZSBpZihpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsdWVNaXNzaW5nKXtcclxuICAgICAgICB2YWxpZGF0aW9uTWVzc2FnZSA9IHRoaXMudHJhbnNsYXRpb25zSW5QVFtpbnB1dEVsZW1lbnQudHlwZV1bJ3ZhbHVlTWlzc2luZyddXHJcbiAgICAgIH1lbHNlIGlmKGlucHV0RWxlbWVudC52YWxpZGl0eS50eXBlTWlzbWF0Y2gpe1xyXG4gICAgICAgIHZhbGlkYXRpb25NZXNzYWdlID0gdGhpcy50cmFuc2xhdGlvbnNJblBUW2lucHV0RWxlbWVudC50eXBlXVsndHlwZU1pc21hdGNoJ11cclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgdmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dCA9IChpbnB1dExpc3QpID0+IHtcclxuICAgIHJldHVybiBpbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlID0gKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCkgPT4ge1xyXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpKSB7XHJcbiAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLmRhdGEuYnV0dG9uSW5hY3RpdmVDbGFzcyk7XHJcbiAgICAgIGJ1dHRvbkVsZW1lbnQuc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgXCJcIilcclxuICAgIH1lbHNlIHtcclxuICAgICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuZGF0YS5idXR0b25JbmFjdGl2ZUNsYXNzKTtcclxuICAgICAgYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKVxyXG4gICAgfSBcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycyA9IChmb3JtRWxlbWVudCkgPT4ge1xyXG4gICAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuZGF0YS5pbnB1dFNlbGVjdG9yKSk7XHJcbiAgICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmRhdGEuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgXHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpO1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuX2NoZWNrSW5wdXRWYWxpZGl0eShmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50KTtcclxuICAgICAgICBzZWxmLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24gPSAoKSA9PiB7XHJcbiAgICBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLmZvcm1FbGVtZW50KSk7XHJcbiAgICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xyXG4gICAgICBmb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGZ1bmN0aW9uIChldnQpIHtcclxuICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKGZvcm1FbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwe1xyXG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yKXtcclxuICAgIHRoaXMuX3NlbGVjdG9yID0gc2VsZWN0b3I7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3BhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZScpO1xyXG4gICAgdGhpcy5fY2xvc2VCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKS5jaGlsZHJlblswXTtcclxuICB9XHJcblxyXG4gIG9wZW4oKXtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4geyBcclxuICAgICAgdGhpcy5fcGFnZS5jbGFzc0xpc3QuYWRkKCdwYWdlX19zZW1pdHJhbnNwYXJlbnQnKTtcclxuICAgICAgdGhpcy5fY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX19vcGVuZWQnKTtcclxuICAgIH0sIDUwKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCl7IFxyXG4gICAgdGhpcy5fcGFnZS5jbGFzc0xpc3QucmVtb3ZlKCdwYWdlX19zZW1pdHJhbnNwYXJlbnQnKTtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9fb3BlbmVkJyk7XHJcbiAgfVxyXG4gIFxyXG4gIF9oYW5kbGVFc2NDbG9zZShlKXtcclxuICAgIGlmKGUua2V5ID09PSBcIkVzY2FwZVwiKXtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2Nsb3NlQWZ0ZXJCdXR0b25DbGljayhlKXtcclxuICAgIGNvbnN0IGlzQ2xvc2VzdCA9IGUudGFyZ2V0LmNsb3Nlc3QodGhpcy5fc2VsZWN0b3IpO1xyXG4gICAgICBpZiAoaXNDbG9zZXN0KSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgfVxyXG5cclxuICBfY2xvc2VBZnRlckNsaWNrT3V0c2lkZVBvcHVwKGUpe1xyXG4gICAgY29uc3QgaXNDbG9zZXN0ID0gZS50YXJnZXQuY2xvc2VzdCh0aGlzLl9zZWxlY3Rvcik7XHJcbiAgICBpZiAoIWlzQ2xvc2VzdCAmJiB0aGlzLl9jb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKCdwb3B1cF9fb3BlbmVkJykpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgIHRoaXMuX2Nsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9jbG9zZUFmdGVyQnV0dG9uQ2xpY2suYmluZCh0aGlzKSk7XHJcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5fY2xvc2VBZnRlckJ1dHRvbkNsaWNrLmJpbmQodGhpcykpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2Nsb3NlQWZ0ZXJDbGlja091dHNpZGVQb3B1cC5iaW5kKHRoaXMpKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9jbG9zZUFmdGVyQ2xpY2tPdXRzaWRlUG9wdXAuYmluZCh0aGlzKSk7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcykpO1xyXG4gIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwe1xyXG4gY29uc3RydWN0b3IoeyBmb3JtU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQgfSl7XHJcbiAgc3VwZXIoZm9ybVNlbGVjdG9yKTtcclxuICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9jb250YWluZXIucXVlcnlTZWxlY3RvckFsbChcIi5mb3JtX19pbnB1dFwiKTtcclxuIH1cclxuXHJcbiBfZ2V0SW5wdXRWYWx1ZXMoKXtcclxuICB0aGlzLl9mb3JtVmFsdWVzID0ge307XHJcbiAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goaW5wdXQgPT4ge1xyXG4gICAgdGhpcy5fZm9ybVZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gIH0pO1xyXG4gIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xyXG4gfVxyXG5cclxuIF9zZXRJbnB1dFZhbHVlcyhmb3JtVmFsdWVzKXtcclxuICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChmdW5jdGlvbihpbnB1dCl7XHJcbiAgICBpbnB1dC5wbGFjZWhvbGRlciA9IGZvcm1WYWx1ZXNbaW5wdXQubmFtZV07XHJcbiAgICByZXR1cm4gaW5wdXQ7XHJcbiAgfSk7XHJcbiB9XHJcblxyXG4gX3Jlc2V0KCl7XHJcbiAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goaW5wdXQgPT4ge1xyXG4gICAgaW5wdXQudmFsdWUgPSBcIlwiO1xyXG4gIH0pO1xyXG4gfVxyXG5cclxuIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB0aGlzLl9jb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB0aGlzLmNsb3NlKCk7XHJcbiAgfSk7XHJcbiB9XHJcblxyXG4gY2xvc2UoKXtcclxuICB0aGlzLl9yZXNldCgpO1xyXG4gIHN1cGVyLmNsb3NlKCk7XHJcbiB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7aXRlbSwgcmVuZGVyZXJ9LCBjbGFzc1NlbGVjdG9yKXtcclxuICAgIHRoaXMuX2l0ZW0gPSBpdGVtO1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY2xhc3NTZWxlY3RvcilcclxuICB9XHJcblxyXG4gIHJlbmRlcmVyKCl7XHJcbiAgICB0aGlzLl9pdGVtLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpe1xyXG4gICAgdGhpcy5fY29udGFpbmVyLmluc2VydEJlZm9yZShlbGVtZW50LCAgdGhpcy5fY29udGFpbmVyLmZpcnN0Q2hpbGQpO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbUluaXRpYWxpemVQYWdlKGVsZW1lbnQpe1xyXG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mb3tcclxuICBjb25zdHJ1Y3Rvcih7bmFtZVNlbGVjdG9yLCBhYm91dFNlbGVjdG9yfSwgaWQpe1xyXG4gICAgdGhpcy5fbmFtZVNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fYWJvdXRTZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYWJvdXRTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9pZCA9IGlkO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKXtcclxuICAgIHJldHVybiB7bmFtZTogdGhpcy5fbmFtZVNlbGVjdG9yLnRleHRDb250ZW50LCBhYm91dDogdGhpcy5fYWJvdXRTZWxlY3Rvci50ZXh0Q29udGVudH07XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyh7bmFtZSwgYWJvdXR9KXtcclxuICAgIHRoaXMuX25hbWVTZWxlY3Rvci50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB0aGlzLl9hYm91dFNlbGVjdG9yLnRleHRDb250ZW50ID0gYWJvdXQ7IFxyXG4gIH1cclxufSIsImltcG9ydCBcIi4vcGFnZS9pbmRleC5jc3NcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi9jb21wb25lbnRzL1NlY3Rpb25cIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuL2NvbXBvbmVudHMvVXNlckluZm9cIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4vY29tcG9uZW50cy9BcGlcIjtcclxuXHJcblxyXG4vL3Rva2VuOiBmYmQ0NDc1OS01ZjEwLTQ2OTQtOWJmZi1mN2UzNWIwNGY5N2JcclxuLy9ncm91cCBJRDogd2ViX3B0YnJfMDZcclxuXHJcbmNvbnN0IGVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZWRpdC1idXR0b24nKTtcclxuY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcclxuY29uc3QgYXZhdGFyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhci1idXR0b24nKTtcclxuY29uc3QgcHJvZmlsZUltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2ltYWdlJyk7XHJcbmNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX25hbWUnKTtcclxuY29uc3Qgd29ya05hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fd29yaycpO1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL3dlYl9wdGJyXzA0XCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCJmYmQ0NDc1OS01ZjEwLTQ2OTQtOWJmZi1mN2UzNWIwNGY5N2JcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcbiAgfVxyXG59KTtcclxuXHJcbmNvbnN0IGluaXRpYWxVc2VyID0gYXdhaXQgYXBpLmdldFVzZXIoKTtcclxucHJvZmlsZUltYWdlLnNyYyA9IGluaXRpYWxVc2VyLmF2YXRhcjtcclxucHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSBpbml0aWFsVXNlci5uYW1lO1xyXG53b3JrTmFtZS50ZXh0Q29udGVudCA9IGluaXRpYWxVc2VyLmFib3V0O1xyXG5cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xyXG4gIG5hbWVTZWxlY3RvcjogJy5wcm9maWxlX19uYW1lJywgXHJcbiAgYWJvdXRTZWxlY3RvcjogJy5wcm9maWxlX193b3JrJ1xyXG59LCBpbml0aWFsVXNlci5faWQpO1xyXG5cclxuY29uc3QgaW5pdGlhbENhcmRzID0gYXdhaXQgYXBpLmdldEluaXRpYWxDYXJkcygpO1xyXG5jb25zdCBjYXJkc0NvbnRhaW5lciA9IG5ldyBTZWN0aW9uKHtcclxuICBpdGVtOiBpbml0aWFsQ2FyZHMsIFxyXG4gIHJlbmRlcmVyOiAoaXRlbSk9PntcclxuICAgIGNvbnN0IG5ld0NhcmQgPSBuZXcgQ2FyZChpdGVtLCBcIi5jYXJkc19faXRlbVwiLCBhcGkpO1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBuZXdDYXJkLmdlbmVyYXRlQ2FyZCh1c2VySW5mby5faWQpO1xyXG4gICAgY2FyZHNDb250YWluZXIuYWRkSXRlbUluaXRpYWxpemVQYWdlKGNhcmRFbGVtZW50KTtcclxuICB9fSxcclxuICAnLmNhcmRzJyk7XHJcbmNhcmRzQ29udGFpbmVyLnJlbmRlcmVyKCk7XHJcblxyXG5mdW5jdGlvbiBpbml0YWxpemVGb3JtVmFsaWRhdGlvbigpe1xyXG4gIGNvbnN0IGRhdGEgPSB7XHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLmZvcm1fX3N1Ym1pdFwiLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnV0dG9uX2Rpc2FibGVkXCIsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gICAgYnV0dG9uSW5hY3RpdmVDbGFzczogXCJidXR0b25fX2luYWN0aXZlXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcImZvcm1fX2Vycm9yX3Zpc2libGVcIixcclxuICAgIGlucHV0RXJyb3JDbGFzc0FjdGl2ZTogXCJmb3JtX19pbnB1dC1lcnJvcl9hY3RpdmVcIlxyXG4gIH0gO1xyXG4gIGNvbnN0IGVkaXRGb3JtID0gbmV3IEZvcm1WYWxpZGF0b3IoZGF0YSxcIi5wb3B1cF9fZm9ybS1lZGl0XCIpO1xyXG4gIGVkaXRGb3JtLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuICBjb25zdCBhZGRGb3JtID0gbmV3IEZvcm1WYWxpZGF0b3IoZGF0YSxcIi5wb3B1cF9fZm9ybS1hZGRcIik7XHJcbiAgYWRkRm9ybS5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgY29uc3QgYXZhdGFyRm9ybSA9IG5ldyBGb3JtVmFsaWRhdG9yKGRhdGEsIFwiLnBvcHVwX19mb3JtLWF2YXRhclwiKTtcclxuICBhdmF0YXJGb3JtLmVuYWJsZVZhbGlkYXRpb24oKTtcclxufVxyXG5cclxuaW5pdGFsaXplRm9ybVZhbGlkYXRpb24oKTtcclxuXHJcblxyXG5jb25zdCBhZGRGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gIGZvcm1TZWxlY3RvcjogJy5wb3B1cC1hZGQnLCBcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoZm9ybURhdGEpID0+IHtcclxuICAgIGFwaS5hZGROZXdDYXJkKGZvcm1EYXRhKVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBjb25zdCBjYXJkID0gbmV3IENhcmQocmVzLCBcIi5jYXJkc19faXRlbVwiLCBhcGkpO1xyXG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKHVzZXJJbmZvLl9pZCk7XHJcbiAgICAgIGNhcmRzQ29udGFpbmVyLmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59KTtcclxuYWRkRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgZWRpdEZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgZm9ybVNlbGVjdG9yOiAnLnBvcHVwLWVkaXQnLCBcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoZm9ybURhdGEpID0+IHtcclxuICAgIGFwaS51cGRhdGVVc2VySW5mbyhmb3JtRGF0YSk7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7bmFtZTogZm9ybURhdGEubmFtZSwgYWJvdXQ6IGZvcm1EYXRhLmFib3V0fSk7XHJcbiAgfVxyXG59KTtcclxuZWRpdEZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcblxyXG5jb25zdCBhdmF0YXJGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gIGZvcm1TZWxlY3RvcjogJy5wb3B1cC1hdmF0YXInLFxyXG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChmb3JtRGF0YSkgPT4ge1xyXG4gICAgYXBpLnVwZGF0ZUF2YXRhclBpY3R1cmUoZm9ybURhdGEpXHJcbiAgICAudGhlbigocmVzKT0+e1xyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9faW1hZ2UnKS5zcmMgPSByZXMuYXZhdGFyO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59KTtcclxuYXZhdGFyRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuZnVuY3Rpb24gb3BlblBvcHVwV2luZG93KCl7XHJcbiAgZWRpdEZvcm0uX3NldElucHV0VmFsdWVzKHVzZXJJbmZvLmdldFVzZXJJbmZvKCkpO1xyXG4gIGVkaXRGb3JtLm9wZW4oKTtcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIG9wZW5BZGRQb3B1cFdpbmRvdygpe1xyXG4gIGFkZEZvcm0ub3BlbigpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBvcGVuQXZhdGFyUG9wdXBXaW5kb3coKXtcclxuICBhdmF0YXJGb3JtLm9wZW4oKTtcclxufVxyXG5cclxuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb3BlblBvcHVwV2luZG93KTtcclxuYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvcGVuQWRkUG9wdXBXaW5kb3cpO1xyXG5hdmF0YXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9wZW5BdmF0YXJQb3B1cFdpbmRvdyk7IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIGRlZmluaXRpb24pIHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqLCBwcm9wKSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTsgfSIsIi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLy8gVGhpcyBlbnRyeSBtb2R1bGUgdXNlZCAnbW9kdWxlJyBzbyBpdCBjYW4ndCBiZSBpbmxpbmVkXG52YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNTc5KTtcbiJdLCJuYW1lcyI6WyJ3ZWJwYWNrUXVldWVzIiwid2VicGFja0V4cG9ydHMiLCJ3ZWJwYWNrRXJyb3IiLCJyZXNvbHZlUXVldWUiLCJBcGkiLCJvcHRpb25zIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9iYXNlVXJsIiwiYmFzZVVybCIsIl9oZWFkZXJzIiwiaGVhZGVycyIsImtleSIsInZhbHVlIiwiX3RoaXMiLCJmZXRjaCIsImNvbmNhdCIsInRoZW4iLCJyZXMiLCJjaGVja1JldHVybiIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsIl90aGlzMiIsImRhdGEiLCJzdWJtaXRCdXR0b24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm5hbWUiLCJhYm91dCIsIm9rIiwiY2FyZHNJZCIsIl90aGlzMyIsIl90aGlzNCIsIl90aGlzNSIsImxpbmsiLCJhdmF0YXIiLCJfdGhpczYiLCJjYXJkSWQiLCJfdGhpczciLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwic2VsZWN0b3IiLCJjYWxsIiwiZXZ0IiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsInNldFRpbWVvdXQiLCJkaXNwbGF5SW1hZ2UiLCJ0ZXh0Q29udGVudCIsInRhcmdldCIsImFsdCIsInNyYyIsIlBvcHVwIiwiQ2FyZCIsInRlbXBsYXRlTmFtZSIsImFwaSIsIl9uYW1lIiwiX2xpbmsiLCJfbGlrZXMiLCJsaWtlcyIsIl9pZCIsIl9vd25lcklkIiwib3duZXIiLCJfdGVtcGxhdGVOYW1lIiwiX2FwaSIsIm9wZW4iLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJjb250YWlucyIsImxpa2VDYXJkIiwibmV4dEVsZW1lbnRTaWJsaW5nIiwibGVuZ3RoIiwiZGlzbGlrZUNhcmQiLCJzZWxmIiwiZGVsZXRlRm9ybSIsIlBvcHVwV2l0aEZvcm0iLCJmb3JtU2VsZWN0b3IiLCJoYW5kbGVGb3JtU3VibWl0IiwiZm9ybURhdGEiLCJkZWxldGVQaWN0dXJlIiwiY2xvc2VzdCIsInJlbW92ZSIsInNldEV2ZW50TGlzdGVuZXJzIiwidXNlcklkIiwibmV3Q2FyZCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJhZGRFdmVudExpc3RlbmVyIiwiX29wZW5QaWN0dXJlIiwiX2NsaWNrTGlrZUJ1dHRvbiIsImJpbmQiLCJfY2xpY2tEZWxldGVCdXR0b24iLCJhZGQiLCJGb3JtVmFsaWRhdG9yIiwiX2NyZWF0ZUNsYXNzIiwiZm9ybUVsZW1lbnQiLCJfZGVmaW5lUHJvcGVydHkiLCJ0ZXh0IiwidG9vU2hvcnQiLCJ2YWx1ZU1pc3NpbmciLCJ0eXBlTWlzbWF0Y2giLCJ1cmwiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsImlucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzc0FjdGl2ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInRyYW5zbGF0aW9uc0luUFQiLCJ0eXBlIiwiX3Nob3dJbnB1dEVycm9yIiwiaW5wdXRMaXN0Iiwic29tZSIsImJ1dHRvbkVsZW1lbnQiLCJfaGFzSW52YWxpZElucHV0IiwiYnV0dG9uSW5hY3RpdmVDbGFzcyIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInByZXZlbnREZWZhdWx0IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX3NlbGVjdG9yIiwiX2NvbnRhaW5lciIsIl9wYWdlIiwiX2Nsb3NlQnV0dG9uIiwiY2hpbGRyZW4iLCJlIiwiY2xvc2UiLCJfY2xvc2VBZnRlckJ1dHRvbkNsaWNrIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9jbG9zZUFmdGVyQ2xpY2tPdXRzaWRlUG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJfcmVmIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfaW5wdXRMaXN0IiwiX2Zvcm1WYWx1ZXMiLCJpbnB1dCIsImZvcm1WYWx1ZXMiLCJwbGFjZWhvbGRlciIsIl9nZXRJbnB1dFZhbHVlcyIsIl9yZXNldCIsIlNlY3Rpb24iLCJjbGFzc1NlbGVjdG9yIiwiaXRlbSIsInJlbmRlcmVyIiwiX2l0ZW0iLCJfcmVuZGVyZXIiLCJlbGVtZW50IiwiaW5zZXJ0QmVmb3JlIiwiZmlyc3RDaGlsZCIsImFwcGVuZCIsIlVzZXJJbmZvIiwibmFtZVNlbGVjdG9yIiwiYWJvdXRTZWxlY3RvciIsIl9uYW1lU2VsZWN0b3IiLCJfYWJvdXRTZWxlY3RvciIsIl9yZWYyIiwiZWRpdEJ1dHRvbiIsImFkZEJ1dHRvbiIsImF2YXRhckJ1dHRvbiIsInByb2ZpbGVJbWFnZSIsInByb2ZpbGVOYW1lIiwid29ya05hbWUiLCJhdXRob3JpemF0aW9uIiwiaW5pdGlhbFVzZXIiLCJnZXRVc2VyIiwidXNlckluZm8iLCJpbml0aWFsQ2FyZHMiLCJnZXRJbml0aWFsQ2FyZHMiLCJjYXJkc0NvbnRhaW5lciIsImNhcmRFbGVtZW50IiwiZ2VuZXJhdGVDYXJkIiwiYWRkSXRlbUluaXRpYWxpemVQYWdlIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImVycm9yQ2xhc3MiLCJlbmFibGVWYWxpZGF0aW9uIiwiYWRkRm9ybSIsImFkZE5ld0NhcmQiLCJhZGRJdGVtIiwiZWRpdEZvcm0iLCJ1cGRhdGVVc2VySW5mbyIsInNldFVzZXJJbmZvIiwiYXZhdGFyRm9ybSIsInVwZGF0ZUF2YXRhclBpY3R1cmUiLCJvcGVuUG9wdXBXaW5kb3ciLCJfc2V0SW5wdXRWYWx1ZXMiLCJnZXRVc2VySW5mbyIsIm9wZW5BZGRQb3B1cFdpbmRvdyIsIm9wZW5BdmF0YXJQb3B1cFdpbmRvdyIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiU3ltYm9sIiwicXVldWUiLCJkIiwiZm4iLCJyIiwiYSIsImhhc0F3YWl0IiwiY3VycmVudERlcHMiLCJvdXRlclJlc29sdmUiLCJkZXBRdWV1ZXMiLCJTZXQiLCJwcm9taXNlIiwicmVzb2x2ZSIsInJlaiIsImRlcHMiLCJtYXAiLCJkZXAiLCJvYmoiLCJyZXQiLCJ3cmFwRGVwcyIsImdldFJlc3VsdCIsImZuUXVldWUiLCJxIiwiaGFzIiwicHVzaCIsImRlZmluaXRpb24iLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsImhhc093blByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==